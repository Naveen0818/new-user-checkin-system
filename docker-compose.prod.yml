version: '3.8'

services:
  postgres:
    image: postgres:14-alpine
    container_name: checkin-postgres-prod
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secure_password}
      POSTGRES_DB: ${POSTGRES_DB:-checkin_db}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - checkin-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    container_name: checkin-pgadmin-prod
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@example.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - checkin-network
    depends_on:
      - postgres

  app:
    image: checkin-app:latest
    container_name: checkin-app-prod
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/checkin_db
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER:-postgres}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD:-secure_password}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      APP_JWT_SECRET: ${APP_JWT_SECRET:-8fhg923hf9834hf93hedpo32hr923r9h2f39248hr98h2498rh238rh98h8}
    ports:
      - "8080:8080"
    networks:
      - checkin-network
    depends_on:
      - postgres

networks:
  checkin-network:
    driver: bridge

volumes:
  postgres_data:
  pgadmin_data:
